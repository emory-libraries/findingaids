Xquery (tamino 4)


rough query to return div2 with only information needed for table of contents:

_xql=/TEI.2//div2

_xquery=
for $b in input()/TEI.2//div2  
return <div2> 
{$b/@type} 
{$b/head} 
{$b/bibl} 
</div2> 


sort by (head)

the last line is optional, could also be:
sort by (@type) or sort by (bibl/date/@value)


for $b in input()/TEI.2//div1 
return <div1> 
{$b/@type} 
{$b/head} 
{$b/docDate}
</div1> 

for $b in input()/TEI.2//div1 
let $c := $b/div2 
return <div1> 
{$b/@type} 
{$b/head} 
{$b/docDate}
{$c}
</div1> 

for $b in input()/TEI.2//div1, $c in input()/TEI.2//div1/div2 
return <div1> 
{$b/@type} 
{$b/head} 
{$b/docDate}
  <div2>
    {$c/@type} 
    {$c/head}
    {$c/bibl}
  </div2>}
</div1> 



YES! this is the one we want for iln contents.
Try making a collapsible contents list (include illustrations?) with this.

for $b in input()/TEI.2//div1 
return <div1> 
{$b/@type} 
{$b/head} 
{$b/docDate}
{
for $c in $b/div2
  return <div2>
    {$c/@type} 
    {$c/head}
    {$c/bibl}
  </div2>
}
</div1> 



bring back figures also:

for $b in input()/TEI.2//div1 
return <div1> 
{$b/@type} 
{$b/head} 
{$b/docDate}
{
for $c in $b/div2
  return <div2>
    {$c/@id}
    {$c/@type} 
    {$c/head}
    {$c/bibl}
    { for $d in $c/p/figure
      return $d } 
  </div2>
}
</div1> 








rough query to highlight strings

declare namespace tf="http://namespaces.softwareag.com/tamino/TaminoFunction"
for $b in input()/TEI.2//div2 
let $ref := tf:createTextReference($b, "America")  
return tf:highlight($b, $ref, "highlight")


rough query to search by text string

declare namespace tf="http://namespaces.softwareag.com/tamino/TaminoFunction"
for $b in input()/TEI.2//div2 
where tf:containsText($b//head, "America")
return $b/head 
