Change & Version Information
============================

The following is a summary of changes and improvements to the Finding
Aids application.  New features in each version should be listed, with
any necessary information about installation, upgrade, or deployment
notes.



0.3 Enhanced Search
-------------------

Upgrade notes:

1. Browse pages now include a last-modified header to enable caching.
   Pages are indicated via query string, e.g., titles/B?page=2  
   Some configuration may be required to enable caching on these pages.
   Be reminded that any cache (e.g., Squid) should be configured so that
   cached PDFs will be  kept and not released in order to cache pages
   like these.




0.2 Data Preparation / Admin site
---------------------------------

Replaces the legacy command-line ant process for validating EAD xml
data and loading it to the eXist database.

To upgrade from the previous version:

1. There are a few new external dependencies; please see the README
   for installation instructions.
2. The application now requires that the celery daemon be running;
   consult the README for more details.
3. Update localsettings.py with configuration settings that
   have been added since the last version: (examples in
   localsettings-sample.py)

  * EXISTDB_SERVER_TIMEZONE and EXISTDB_PREVIEW_COLLECTION

    * You should make sure that EXISTDB_PREVIEW_COLLECTION is present
      in eXist, and that the configured eXist user has permission to
      write to that collection.

  * FINDINGAID_EAD_SOURCE 
  * Proxy/cache settings: PROXY_HOST & SITE_BASE_URL
  * RabbitMQ settings (BROKER_*)

4. The Finding Aids site now requires a sql database (for user
   management and tracking deleted finding aids).  You should set up
   a database, configure it in localsettings.pi, and run ``python
   manage.py syncdb``.
5. Run ``python manage.py clean_ead`` to clean all the EAD documents in
   the configured EAD source directory.  Note that this will **modify**
   the EAD files; running the script should be coordinated with anyone
   who might be editing those files.
6. Run ``python manage.py load_ead`` to load all EAD documents in the
   configured EAD source directory to the configured collection in
   eXist.  If you are loading to a new collection, it is recommend that
   you use the existdb index manage scripts to load the index
   configuration before loading data.  Because the load_ead script
   triggers celery tasks to reload PDFs in the cache and waits until
   all celery tasks have completed, loading all the Finding Aids may
   take a long time.
7. After loading the data, you may wish check the data using the
   ``python manage.py check_ead`` command.
8. The admin section of the site is at /admin/ (under your site url).
   This uses Emory LDAP for login, so should be configured to run
   under SSL. 
9. eXist query response times are reported on templates in Debug mode
   only.  To view them, set DEBUG = True in the settings, and add any
   IP addresses that need access to the INTERNAL_IPS.  In staging and
   production, DEBUG should be set to False. 


**Features**

* An authorized archivist can log in to an admin section of the
  finding aids site inaccessible to other users.
* Logged in admins can view a list of finding aid files recently
  modified on F:\ and ready for upload, sorted by last modified.
* Logged in admins can select files from the recently modified list
  for upload directly to publication. 
* Logged in admins can select a file from the recently modified list
  for cleaning, see a list of changes made, and optionally download
  the cleaned-up version if changes were made, in order to safely
  clean up the canonical copy of the EAD xml files.
* Logged in admins can select files from the recently modified list
  for preview; multiple admins can preview different documents
  simultaneously.
* An admin previewing a finding aid can click a link (on any page in a
  multi-page finding aid) to publish that document. 
* When an admin tries to publish or preview an invalid finding aid,
  the user sees a meaningful error message directing them how to fix
  it.
* When the web application is unable to save a finding aid, the user
  sees a meaningful message describing the problem and how to proceed.
* Logged in admins can view a minimal alphabetical list of published
  finding aids.
* Logged in admins can select a finding aid for deletion from the
  alphabetical list of published finding aids.
* When a collection is removed from the production site, patrons
  accessing their URLs are referred to MARBL staff for collection
  status.
* Researchers can receive a pdf of a finding aid in less than 10
  seconds.
* A search engine or web crawler can harvest descriptive metadata
  based on the EAD contents along with the HTML data, to improve
  google-ability.
* A system administrator can run a command to clean all or specified
  EAD xml files in the configured directory, in order to easily update
  all existing files to new standards.
* A system administrator can run a command to load all or specified
  EAD xml files in the configured source directory to the configured
  eXist collection, in order to easily populate a new eXist collection


0.1 Port to Django
------------------

Reimplementation of the functionality of the existing PHP Finding Aids
site in django and eXist 1.4.

**Features**

* Researchers can browse finding aids alphabetically by first letter
  of title.
* Researchers can click on the title of a finding aid in search or
  browse results to view more details about what resources are
  available in that collection.
* Researchers can search finding aids by keyword.
* Developers can access EAD XML objects in an eXist-backed Django
  Model workalike.
* Researchers can click 'download PDF' when viewing a single finding
  aid to download a PDF version of the entire finding aid.
* Researchers can navigate through finding aid site with the same look
  and feel of the library site.
* When a researcher clicks on an old link to a drupal or pre-drupal
  finding aid URL, they are automatically redirected to new finding
  aid URLs.
